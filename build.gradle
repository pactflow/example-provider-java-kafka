plugins {
	id 'org.springframework.boot' version '2.7.18'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'java'
  id "au.com.dius.pact" version "4.6.3"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'au.com.dius.pact.provider:junit5:4.6.3'
	testImplementation 'au.com.dius.pact.provider:spring:4.6.3'
	testImplementation 'au.com.dius.pact.provider:gradle:4.6.3'
	runtimeOnly 'com.h2database:h2'
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
    implementation 'net.datafaker:datafaker:2.0.2'
}

test {
	useJUnitPlatform()
	testLogging.showStandardStreams = true // output pact verification logs to stdout
}

pact {

    broker {
        pactBrokerUrl = System.getenv('PACT_BROKER_BASE_URL')
        pactBrokerToken = System.getenv('PACT_BROKER_TOKEN')
    }

    serviceProviders {
			"pactflow-example-provider" {
 				fromPactBroker {
				withSelectors {
						mainBranch() // (recommended) - Returns the pacts for consumers configured mainBranch property
						deployedOrReleased() // (recommended) - Returns the pacts for all versions of the consumer that are currently deployed or released and currently supported in any environment.
					}
		      	}
			}
    }
}